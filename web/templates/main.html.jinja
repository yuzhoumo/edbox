<!doctype html>
<html>
  <head>
    <meta charset="UTF-8" />
    <title>EdBox Archive Viewer</title>
    <link rel="icon" type="image/x-icon" href="static/img/favicon.ico" />
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- <link rel="stylesheet" href="static/build/tailwind.css" /> -->
    <link rel="stylesheet" href="static/css/style.css" />
    <script src="static/js/utils.js"></script>
    <script src="static/js/marked@12.0.1.min.js"></script>
    <script src="static/js/fuse.basic@7.0.0.min.js"></script>
    <script async src="static/js/mathjax/load-mathjax.js"></script>
    <script defer src="static/js/alpine/persist@3.13.8.min.js"></script>
    <script defer src="static/js/alpine/intersect@3.18.8.min.js"></script>
    <script defer src="static/js/alpine/alpinejs@3.13.8.min.js"></script>
    <script>
      /* Data (generated by jinja) */
      var getPosts = () => ({{ posts }});
      var getUsers = () => ({{ users }}).reduce((map, item) => {
        map[item.id] = item;
        return map;
      }, {});

      /* Make search function (use closure to hide local vars) */
      var searchPosts = (() => {
        const posts = getPosts();
        const options = {
          keys: [{
            name: "number",
            getFn: (post) => `@${post.number}`
          }, {
            name: "title",
            getFn: (post) => post.title
          }, {
            name: "content",
            getFn: (post) => post.content
          }, ],
        };
        const index = Fuse.createIndex(options.keys, posts);
        const fuse = new Fuse(posts, options, index);
        return (query) => {
          if (query === "") return posts;
          return fuse.search(query).map((item) => item.item);
        };
      })();

      /* Initialize global data in Alpine store */
      document.addEventListener("alpine:initializing", async () => {
        Alpine.store("data", {
          currentPost: Alpine.$persist(getPosts()[0]).using(sessionStorage),
          setCurrent(post) {
            this.currentPost = post;
          },
        });
      });
    </script>
  </head>
  <body>
    <div id="grid-view-sidebar-and-current-post" class="grid grid-cols-9 lg:grid-cols-4">
      <!-- posts sidebar feed -->
      <div
        id="grid-column-sidebar"
        class="col-span-3 lg:col-span-1 h-[100vh] overflow-y-auto bg-gray-800"
        x-data="{ query: '', posts: getPosts(), shown: 128 }"
        x-init="$watch('query', (q) => {
          posts = searchPosts(q);
          shown = 128;
        })"
      >
        <!-- searchbar -->
        <div class="relative sticky top-0">
          <input
            id="posts-searchbar"
            :class="cn([
              'w-full', 'border-b', 'border-gray-600',
              'bg-gray-800', 'px-3', 'py-2', 'text-white',
              'shadow-xl', 'focus:border-[#9b59b6]',
              'focus:outline-none', 'text-lg', 'font-thin', 'pl-10'
            ])"
            type="text"
            placeholder="Search"
            x-model.debounce="query"
          />
          <svg
            class="absolute left-3 top-1/2 transform -translate-y-1/2 size-5 fill-gray-400 z-30"
            viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"
          >
            <path d="m100 94.333-30.962-30.962c5.444-6.69 8.716-15.217 8.716-24.494-.001-21.437-17.441-38.877-38.878-38.877s-38.876 17.44-38.876 38.876 17.44 38.877 38.876 38.877c9.278 0 17.804-3.271 24.494-8.716l30.963 30.963zm-61.124-24.594c-17.017 0-30.861-13.845-30.861-30.862s13.844-30.861 30.861-30.861 30.862 13.844 30.862 30.861c.001 17.017-13.844 30.862-30.862 30.862" transform="matrix(.2 0 0 .2 2 2)" />
          </svg>
        </div>

        <!-- sidebar items -->
        <div class="py-2">
          <template x-data x-for="post in posts.slice(0, shown)" :key="post.id">
            <div
              :class="cn([
                'select-none', 'space-y-1', 'text-gray-200', 'mx-2',
                'hover:bg-gray-600', 'hover:rounded-md'
              ])"
              x-on:click="$store.data.setCurrent(post);"
            >
              <div class="flex flex-col gap-2 mx-2 -mt-[1px] py-4 border-b border-gray-600">
                <!-- sidebar item header -->
                <div class="pointer-events-none flex justify-between items-center gap-2">
                  <span class="text-sm font-extralight" x-text="post.title"></span>
                  <span class="text-xs font-extralight" x-text="formatDate(post.created_at)"></span>
                </div>

                <!-- sidebar item body -->
                <div class="flex flex-row items-center gap-2 w-full">
                  <span
                    class="text-xs font-semibold"
                    x-text="post.category + (post.subcategory ? ' - ' + post.subcategory : '')"
                  ></span>
                  <span
                    class="text-xs font-extralight"
                    x-text="post.is_ ? 'Anonymous' : getUsers()[post.user_id]?.name"
                  ></span>
                  <span
                    class="text-[0.5rem] font-semibold bg-[#372dad] rounded-md px-1 py-[2px]"
                    x-show="!post.is_anonymous && getUsers()[post.user_id].course_role === 'admin'"
                  >
                    STAFF
                  </span>
                </div>
              </div>
            </div>
          </template>
        </div>

        <!-- increase # of shown posts when this span enters the viewbox -->
        <span id="load-more-posts-trigger" x-intersect="shown += 128"></span>

        <!-- show "no results found" when posts length is 0 -->
        <span
          id="nothing-found"
          class="flex select-none justify-center py-8 text-lg text-gray-300"
          x-show="posts.length === 0"
        >
          No results found
        </span>
      </div>

      <!-- main post and comments -->
      <div
        id="grid-column-current-post"
        :class="cn([
          'col-span-6', 'lg:col-span-3', 'h-[100vh]', 'space-y-4',
          'overflow-y-auto', 'bg-gray-900', 'pb-4'
        ])"
        x-init="$watch('$store.data.currentPost', (p) => { currentPost = p })"
        x-data="{
          currentPost: $store.data.currentPost, userMap: getUsers(), i: 0
        }"
      >
        <!-- button for triggering latex typesetting -->
        <div
          id="container-btn-typeset-latex"
          class="px-4 pt-4" x-data="{ shown: containsInlineLatex(currentPost) }"
          x-effect="shown = containsInlineLatex(currentPost)"
          x-show="shown"
        >
          <button
            id="btn-typeset-latex"
            :class="cn([
              'w-full', 'rounded-md', 'bg-green-400', 'px-2', 'py-1',
              'text-sm', 'text-green-900', 'hover:bg-green-500'
            ])"
            x-on:click="shown = false; MathJax.typesetPromise()"
          >
            Click here to show LaTeX
          </button>
        </div>
        <!-- MAIN POST GOES HERE -->
      </div>
    </div>
  </body>
</html>
